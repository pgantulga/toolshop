import {
  f,
  t
} from "./chunk-F6VEBMEW.js";
import {
  appendErrors
} from "./chunk-YJOUAL4D.js";
import "./chunk-ZVMIEU5R.js";
import "./chunk-UXIASGQL.js";

// node_modules/@hookform/resolvers/joi/dist/joi.mjs
var n = function(n2, o, a) {
  return void 0 === o && (o = { abortEarly: false }), void 0 === a && (a = {}), function(i, s, u) {
    try {
      var c = function() {
        return l.error ? { values: {}, errors: f((n3 = l.error, o2 = !u.shouldUseNativeValidation && "all" === u.criteriaMode, n3.details.length ? n3.details.reduce(function(r, t2) {
          var n4 = t2.path.join(".");
          if (r[n4] || (r[n4] = { message: t2.message, type: t2.type }), o2) {
            var a2 = r[n4].types, i2 = a2 && a2[t2.type];
            r[n4] = appendErrors(n4, o2, r, t2.type, i2 ? [].concat(i2, t2.message) : t2.message);
          }
          return r;
        }, {}) : {}), u) } : (u.shouldUseNativeValidation && t({}, u), { errors: {}, values: l.value });
        var n3, o2;
      }, v = Object.assign({}, o, { context: s }), l = {}, f2 = function() {
        if ("sync" === a.mode)
          l = n2.validate(i, v);
        else {
          var e = function(e2, r) {
            try {
              var t2 = e2();
            } catch (e3) {
              return r(e3);
            }
            return t2 && t2.then ? t2.then(void 0, r) : t2;
          }(function() {
            return Promise.resolve(n2.validateAsync(i, v)).then(function(e2) {
              l.value = e2;
            });
          }, function(e2) {
            l.error = e2;
          });
          if (e && e.then)
            return e.then(function() {
            });
        }
      }();
      return Promise.resolve(f2 && f2.then ? f2.then(c) : c());
    } catch (e) {
      return Promise.reject(e);
    }
  };
};
export {
  n as joiResolver
};
//# sourceMappingURL=@hookform_resolvers_joi.js.map
